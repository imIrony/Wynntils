package com.wynntils.modules.richpresence.discordgamesdk;

import com.sun.jna.*;
import com.sun.jna.ptr.PointerByReference;
import com.wynntils.modules.richpresence.discordgamesdk.enums.EDiscordResult;
import com.wynntils.modules.richpresence.profiles.RichProfile;

import java.util.Collections;
import java.util.Map;

/**
 * JNA Wrapper for library <b>DiscordGameSDK</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface DiscordGameSDKLibrary extends Library {
    public static final TypeMapper TYPE_MAPPER = RichProfile.TYPE_MAPPER;
    public static final Map<String, Object> OPTIONS = RichProfile.OPTIONS;
    public static final String JNA_LIBRARY_NAME = RichProfile.GAME_SDK_FILE.getAbsolutePath();
    public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(JNA_LIBRARY_NAME, Collections.singletonMap("classloader", DiscordGameSDKLibrary.class.getClassLoader()));
    public static final DiscordGameSDKLibrary INSTANCE = Native.loadLibrary(JNA_LIBRARY_NAME, DiscordGameSDKLibrary.class, OPTIONS);

    public static final int DISCORD_VERSION = (int) 3;
    public static final int DISCORD_APPLICATION_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_USER_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_IMAGE_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_ACTIVITY_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_RELATIONSHIP_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_LOBBY_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_NETWORK_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_OVERLAY_MANAGER_VERSION = (int) 2;
    public static final int DISCORD_STORAGE_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_STORE_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_VOICE_MANAGER_VERSION = (int) 1;
    public static final int DISCORD_ACHIEVEMENT_MANAGER_VERSION = (int) 1;

    /**
     * Original signature : <code>EDiscordResult DiscordCreate(DiscordVersion, DiscordCreateParams*, IDiscordCore**)</code><br>
     * <i>native declaration : line 695</i><br>
     * 
     * @deprecated use the safer method {@link #DiscordCreate(int, DiscordCreateParams, IDiscordCore.ByReference[])} instead
     */
    @Deprecated
    EDiscordResult DiscordCreate(int version, DiscordCreateParams params, PointerByReference result);

    /**
     * Original signature : <code>EDiscordResult DiscordCreate(DiscordVersion, DiscordCreateParams*, IDiscordCore**)</code><br>
     * <i>native declaration : line 695</i>
     */
    EDiscordResult DiscordCreate(int version, DiscordCreateParams params, IDiscordCore.ByReference[] result);

    public static interface not_implemented extends Callback {
        public void apply();
    }
}
